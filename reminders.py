import asyncio
import os
from datetime import datetime, timedelta
from aiogram import Bot
from dotenv import load_dotenv
from database import get_users_without_transactions_today

load_dotenv()
bot = Bot(token=os.getenv("BOT_TOKEN"))


async def reminder_loop():
    """
    –¶–∏–∫–ª, –∑–∞–ø—É—Å–∫–∞—é—â–∏–π—Å—è –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏ –∂–¥—É—â–∏–π –¥–æ 20:00 –∫–∞–∂–¥—ã–π –¥–µ–Ω—å.
    –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞ –¥–µ–Ω—å –Ω–µ –≤–Ω—ë—Å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ ‚Äî –µ–º—É –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ.
    """
    while True:
        now = datetime.now()
        target_time = now.replace(hour=20, minute=0, second=0, microsecond=0)

        # –ï—Å–ª–∏ —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è —É–∂–µ –ø–æ–∑–∂–µ 20:00 ‚Äî –∂–¥–∞—Ç—å –¥–æ 20:00 —Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–Ω—è
        if now >= target_time:
            target_time += timedelta(days=1)

        sleep_duration = (target_time - now).total_seconds()
        print(f"[–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è] –û–∂–∏–¥–∞–Ω–∏–µ –¥–æ {target_time} ({sleep_duration:.0f} —Å–µ–∫)")
        await asyncio.sleep(sleep_duration)

        try:
            users = await get_users_without_transactions_today()
            print(f"[–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–µ–∑ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π —Å–µ–≥–æ–¥–Ω—è: {len(users)}")

            for user_id in users:
                try:
                    await bot.send_message(
                        user_id,
                        "üí° –ù–∞–ø–æ–º–∏–Ω–∞–µ–º: –≤—ã —Å–µ–≥–æ–¥–Ω—è –µ—â—ë –Ω–µ –¥–æ–±–∞–≤–∏–ª–∏ –¥–æ—Ö–æ–¥—ã –∏–ª–∏ —Ä–∞—Å—Ö–æ–¥—ã.",
                    )
                except Exception as e:
                    print(f"[–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏] user_id={user_id}: {e}")

        except Exception as e:
            print(f"[–û—à–∏–±–∫–∞] –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã: {e}")


# async def reminder_loop():
#     """
#     –¢–µ—Å—Ç–æ–≤—ã–π —Ü–∏–∫–ª –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π ‚Äî –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥.
#     """
#     while True:
#         print("[–¢–µ—Å—Ç] –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π...")
#         try:
#             users = await get_users_without_transactions_today()
#             print(f"[–¢–µ—Å—Ç] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–µ–∑ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: {len(users)}")

#             for user_id in users:
#                 try:
#                     await bot.send_message(
#                         user_id,
#                         "üí° [–¢–ï–°–¢] –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: –≤—ã –µ—â—ë –Ω–µ –≤–Ω–µ—Å–ª–∏ –¥–æ—Ö–æ–¥—ã/—Ä–∞—Å—Ö–æ–¥—ã."
#                     )
#                 except Exception as e:
#                     print(f"[–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏] user_id={user_id}: {e}")

#         except Exception as e:
#             print(f"[–û—à–∏–±–∫–∞] –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã: {e}")

#         await asyncio.sleep(30)  # –ü–æ–≤—Ç–æ—Ä —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥
